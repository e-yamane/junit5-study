apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'jacoco'
apply plugin: 'org.junit.platform.gradle.plugin'

ext.junitPlatformVersion = '1.0.0-M4'
ext.junitJupiterVersion  = '5.0.0-M4'

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
	classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
  }
}

repositories {
    jcenter()
}

junitPlatform {
	filters {
		tags {
			// include 'fast'
			//include '3.13'
			//include 'DisplayNameTest'
			//include 'TestReporterTest'
			//include 'CustomizingDisplayNamesTest'
		}
	}
	//enableStandardTestTask true
}

dependencies {
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")			//テストコード書くために必須
	testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")		//ParameterizedTestするなら必須
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")		//テスト実行のために必須
	testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")	//JUnit4のランナーでJUnit5のテストを実行する場合に必要
	testCompile("org.hamcrest:hamcrest-core:1.3")									//assertThat使いたいなら必要
	testCompile("org.mockito:mockito-core:2.+")										//Mockito利用するのに必要

	testRuntime("org.junit.jupiter:junit-jupiter-migration-support:${junitJupiterVersion}")	//Ruleの限定サポート

	testCompile("junit:junit:4.12")													//JUnit4と混在するなら必要
	testRuntime("org.junit.vintage:junit-vintage-engine:4.12.0-M4")					//JUnit4のテストコードをJUnit5のランナーで実行する場合に必要
}
